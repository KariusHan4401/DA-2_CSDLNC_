USE QUANLYCONCUNG
GO

--TRIGGER khi cập nhật chi tiết đơn hàng -> thay đối phí sản phẩm đơn hàng, số lượng tồn, bán, thành tiền mua của chi tiết hóa đơn
CREATE or ALTER
TRIGGER CHI_TIET_DON_HANG_UPDATE
ON CHI_TIET_DON_HANG FOR UPDATE
AS
BEGIN
	--cập nhật lại thành tiền mua
	DECLARE @GIABAN MONEY = (SELECT GIA_BAN 
							FROM SAN_PHAM JOIN inserted 
							ON SAN_PHAM.MASP = inserted.MASP)  
	UPDATE CHI_TIET_DON_HANG
	SET THANH_TIEN_MUA = inserted.SO_LUONG_MUA * ( @GIABAN - CHI_TIET_DON_HANG.GIAM_GIA*@GIABAN )
	FROM (CHI_TIET_DON_HANG JOIN inserted 
	ON CHI_TIET_DON_HANG.MADH = inserted.MADH AND CHI_TIET_DON_HANG.MASP = inserted.MASP)

	--cập nhật lại phí sản phẩm
	UPDATE DON_HANG
	SET PHI_SAN_PHAM = (SELECT SUM(CHI_TIET_DON_HANG.THANH_TIEN_MUA) 
						FROM CHI_TIET_DON_HANG WHERE CHI_TIET_DON_HANG.MADH = DON_HANG.MADH
												GROUP BY CHI_TIET_DON_HANG.MADH)
						WHERE DON_HANG.MADH IN (SELECT DISTINCT inserted.MADH FROM inserted)

	---cập nhật lại số lượng tồn và bán
	DECLARE @SL_MUA INT = (SELECT inserted.SO_LUONG_MUA
						   FROM CHI_TIET_DON_HANG JOIN inserted
						   ON CHI_TIET_DON_HANG.MADH = inserted.MADH
						   AND CHI_TIET_DON_HANG.MASP = inserted.MASP)

	UPDATE BAN
	SET SO_LUONG_TON = SO_LUONG_TON + @SL_MUA,
		SO_LUONG_DA_BAN = SO_LUONG_DA_BAN - @SL_MUA

	FROM BAN JOIN inserted ON (BAN.MASP = inserted.MASP)
	WHERE BAN.MACN = (SELECT DON_HANG.MACN
					FROM (
					(SELECT inserted.MADH 
					FROM inserted) AS A
					 JOIN DON_HANG 
					 ON (DON_HANG.MADH = A.MADH)))
END


--TRIGGER khi xóa chi tiết đơn hàng -> thay đối phí sản phẩm đơn hàng, số lượng tồn, bán
GO
CREATE OR ALTER
TRIGGER CHI_TIET_DON_HANG_DELETE
ON CHI_TIET_DON_HANG FOR DELETE
AS
BEGIN
	--cập nhật lại phí sản phẩm
	UPDATE DON_HANG
	SET PHI_SAN_PHAM = (SELECT SUM(CHI_TIET_DON_HANG.THANH_TIEN_MUA) 
						FROM CHI_TIET_DON_HANG WHERE CHI_TIET_DON_HANG.MADH = DON_HANG.MADH
												GROUP BY CHI_TIET_DON_HANG.MADH)
						WHERE DON_HANG.MADH IN (SELECT DISTINCT deleted.MADH FROM deleted)

	--cập nhật lại số lượng tồn và đã bán
	DECLARE @SL_MUA INT = (SELECT CHI_TIET_DON_HANG.SO_LUONG_MUA
						FROM CHI_TIET_DON_HANG JOIN deleted
						ON CHI_TIET_DON_HANG.MADH = deleted.MADH
						AND CHI_TIET_DON_HANG.MASP = deleted.MASP)
	UPDATE BAN
	SET SO_LUONG_TON = SO_LUONG_TON + @SL_MUA,
		SO_LUONG_DA_BAN = SO_LUONG_DA_BAN - @SL_MUA

	FROM BAN JOIN deleted ON (BAN.MASP = deleted.MASP)
	WHERE BAN.MACN = (SELECT DON_HANG.MACN
					FROM (
					(SELECT deleted.MADH 
					FROM deleted) AS A
					 JOIN DON_HANG 
					 ON (DON_HANG.MADH = A.MADH)))
	
    
END


--TRIGGER khi thêm tiết đơn hàng -> thay đối phí sản phẩm đơn hàng, số lượng tồn, bán
GO
CREATE OR ALTER
TRIGGER CHI_TIET_DON_HANG_INSERT
ON CHI_TIET_DON_HANG FOR INSERT
AS
BEGIN
	--cập nhật lại phí sản phẩm
	UPDATE DON_HANG
	SET PHI_SAN_PHAM = (SELECT SUM(CHI_TIET_DON_HANG.THANH_TIEN_MUA) 
						FROM CHI_TIET_DON_HANG WHERE CHI_TIET_DON_HANG.MADH = DON_HANG.MADH
												GROUP BY CHI_TIET_DON_HANG.MADH)
						WHERE DON_HANG.MADH IN (SELECT DISTINCT inserted.MADH FROM inserted)

	--cập nhật lại số lượng tồn và bán
	DECLARE @SL_MUA INT = (SELECT CHI_TIET_DON_HANG.SO_LUONG_MUA
						   FROM CHI_TIET_DON_HANG JOIN inserted
						   ON CHI_TIET_DON_HANG.MADH = inserted.MADH
						   AND CHI_TIET_DON_HANG.MASP = inserted.MASP)
	UPDATE BAN
	SET SO_LUONG_TON = SO_LUONG_TON + @SL_MUA,
		SO_LUONG_DA_BAN = SO_LUONG_DA_BAN - @SL_MUA

	FROM BAN JOIN inserted ON (BAN.MASP = inserted.MASP)
	WHERE BAN.MACN = (SELECT DON_HANG.MACN
					FROM (
					(SELECT inserted.MADH 
					FROM inserted) AS A
					 JOIN DON_HANG 
					 ON (DON_HANG.MADH = A.MADH)))

END




--TRIGGER khi thêm chi nhiết nhập hàng --> Cập nhật lại số lượng tồn
GO
CREATE OR ALTER
TRIGGER CHI_TIET_NHAP_HANG_INSERT
ON CHI_TIET_NHAP_HANG FOR INSERT
AS
BEGIN
	UPDATE BAN
	SET SO_LUONG_TON = SO_LUONG_TON + inserted.SO_LUONG_NHAP
	FROM inserted JOIN BAN
	ON BAN.MASP = inserted.MASP
	WHERE BAN.MACN = (SELECT PHIEU_NHAP_HANG.MACN 
						FROM PHIEU_NHAP_HANG JOIN inserted
						ON (PHIEU_NHAP_HANG.MAPN = inserted.MAPN))
END



--TRIGGER khi cập nhật chi tiết nhập hàng --> Cập nhật lại số lượng tồn
GO
CREATE OR ALTER
TRIGGER CHI_TIET_NHAP_HANG_UPDATE
ON CHI_TIET_NHAP_HANG FOR UPDATE
AS
BEGIN
	DECLARE @SL_PRE INT = (SELECT deleted.SO_LUONG_NHAP FROM deleted)
	DECLARE @SL_AFT INT = (SELECT inserted.SO_LUONG_NHAP FROM inserted)
	UPDATE BAN
	SET SO_LUONG_TON = SO_LUONG_TON - @SL_PRE + @SL_AFT
	FROM inserted JOIN BAN
	ON BAN.MASP = inserted.MASP
	WHERE BAN.MACN = (SELECT PHIEU_NHAP_HANG.MACN 
						FROM PHIEU_NHAP_HANG JOIN inserted
						ON (PHIEU_NHAP_HANG.MAPN = inserted.MAPN))
END



--TRIGGER khi xóa chi nhiết nhập hàng --> Cập nhật lại số lượng tồn
GO
CREATE OR ALTER
TRIGGER CHI_TIET_NHAP_HANG_DELETE
ON CHI_TIET_NHAP_HANG FOR DELETE
AS
BEGIN
	UPDATE BAN
	SET SO_LUONG_TON = SO_LUONG_TON - deleted.SO_LUONG_NHAP
	FROM deleted JOIN BAN
	ON BAN.MASP = deleted.MASP
	WHERE BAN.MACN = (SELECT PHIEU_NHAP_HANG.MACN 
						FROM PHIEU_NHAP_HANG JOIN deleted
						ON (PHIEU_NHAP_HANG.MAPN = deleted.MAPN))
END

INSERT CHI_TIET_DON_HANG VALUES('DH000000','PN000001',1,0,2)
DELETE CHI_TIET_DON_HANG
WHERE MADH = 'DH000000' AND MASP = 'PN000001'
